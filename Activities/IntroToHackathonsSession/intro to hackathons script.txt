Hello and welcome to the Intro to Hackathons Presentation! My name is Joseph Maxwell, and in this video, I'm going to show you some tips and tricks that will help you make the most of your hackathon experience. ///

First, you'll want to go to this website: hylandtechoutreach dot github dot eye oh slash hackathon. this page has a ton of great resources, including this PowerPoint presentation! Be sure to check it out. ///

Now let's get into it. What is a hackathon? // Well, it's a HACKing MarATHON. // The goal is to build a complete software project within the allotted time. // Teams and ideas can be established ahead of time, OR during the event. // However, all code for the project must be written during the event. Also note that "Hacking" in this instance does not mean breaking into anything - it's all about building. ///

So here's what you need to know to start building. The "Fresh Code Rule" will be in effect for the event: basically, it means you can't come in with code already written. // This does NOT mean, however, that you can't look up code that already exists! In fact, we encourage you to find examples online, or use previous projects for reference. // Google is a great way to do this, and even professional developers use it every day. ///

Once you've built your project, the judging process comes next. // Judges know you didn't have long to complete these projects, and they definitely take that into account when reviewing what you've built. // One thing to keep in mind is that sometimes, the pitch is just important as the product! // Create good presentation materials, // make it fun, show your enthusiasm, // and record yourself practicing and watch it back to improve. // You can also use mentors and other teams as practice dummies - they're sure to give you some great feedback! ///

When it comes time for the final round of presentations, you'll be showing off what you built in front of the judges and an audience! ///

But before you get to that point, let's talk a bit more about project time. Remember, you'll be working in a group here, and you probably don't want to end up like Jordan Peele and take on every single responsibility. Teamwork is important! ///

You can come with a team, or find one when you arrive. Once you're grouped up, you can grab a workstation and start developing! ///

A very important first step here is to figure out what project you actually want to build. // Some ideas are to try to think of a problem that exists, and fix it... // Explore a new technology by building something with it... // or think of anything that you want to make, and bring it to life! // Some basic ideas include // building a website, a social media app, a game, or trying to work with VR, AR, blockchain, or AI to do something really innovative. It's worth spending a decent chunk of time brainstorming on ideas before diving in - it will make a big difference in the outcome! ///

Once you're ready to start planning out the features of your project, you'll want to focus on an M.V.P. In this case, that does not stand for most valuable player like Kevin Durant here. In the software world, MVP stands for Minimum Viable Product. // It's the most basic version of a product that does just enough to be useful. // You'll want to figure out the highest priority features, and work on those. // Given the short time frame, it makes sense to create something that is DEMO-ABLE, even if you wouldn't actually release it for people to use. // You'll also want to focus on what's INTERESTING -- don't worry about the insignificant details, work on what YOU want to work on! ///

Speaking of figuring out what to work on, you'll want to make sure you have an appropriate project scope. Try to figure out what you can finish before the deadline. // It may be difficult, but it's worth taking the time to narrow down your ideas to focus on the right project. // When building a product like this, SCOPE is the amount of work needed to complete a project. // You'll want to make sure your aspirations are not too ambitious - whatever you decide to make should be buildable within the weekend. // We encourage you to speed things up by using existing libraries whenever possible! ///

Now, once you've come up with an MVP, with an appropriately narrow scope, it's time to work. It will be very important for you to be able to collaborate with your team members! // Try to keep up the chatter on Discord or whatever communication channel you choose to use - make sure everyone is on the same page at all times. // You will also want to play Manager a little bit, just like Michael Scott, and _delegate_ tasks. Figure out who can work on what part of the project, and make sure everybody is able to contribute. // One really helpful technique you can try is Pair Programming (just like Amy Poehler and Bradley Cooper but on a computer instead of a piano). // Split two team members up into a driver and an observer - the driver is at the computer typing code, and the observer watches what they're doing, and ask questions or makes comments as needed. // The key is for the two team members to swap roles on a regular basis, so each team member has a chance to be in control. If you're really bold, you can also try MOB programming, where everyone on the team sits around ONE computer and codes everything as one big group. // No matter what you decide to do, the most important thing is to be supportive of each other! As they say in High School Musical, we're all in this together. Make it fun! ///

One of the best parts of the event will be simply hanging out with your team, relaxing, and working together. ///

Now let's get into some of the ways you can actually do that! // One great tool is replit.com, especially its Multiplayer feature. It allows for live chat, live editing, and easy connections. It's kind of like Google Docs but for coding and building projects! Replit also makes deploying your projects super super easy, so it's probably the simplest option. // Another option is Visual Studio Live share. With this, you'll get the fantastic IDE features of Visual Studio or VS Code, and you can work together from anywhere! It is a little more complex than replit, but it may be the way to go if you want to dive into a more serious development environment. // We also encourage you to utilize GitHub for version control, for many reasons. If you'd like to learn more about it, attend the Workshop Session that will take place during the event! ///

Now, let's go over some general advice. Or, "Flawless" advice as Lucy Van Pelt might say. ///

You're going to be coding for a long long time... but you cannot make a good product if you are not in good shape. Here are some helpful ways for you to survive the weekend. ///

Be sure to stay clean! Hygeine is very important. If you're here in person, we have showers you can use. // Make sure to watch what you eat. It's easy to stick to the snacks, but try to consume healthy, wholesome things too. If you're here in person, we'll serve you some great food and beverages. // Please get outside if you can, go for a walk, get away from your screen every once in a while. We will have some fun activities throughout the event for you to take advantage of during breaks - be on the lookout for those! // Lastly, and this one may be tough, but we do encourage you to try and get some sleep. Even short naps can go a long way. If you're here in person, there will be quiet areas available where you can get some rest. ///

Or, you can sleep on a table. ///

Or on a giant teddy bear. ///

Now, you may be completely new to this... and that's great! Hackathons are a great way to learn a ton. // Check out code dot org if you want to learn some basics in drag and drop languages, // w3 schools dot com if you want to start building a website, // youtube for learning pretty much anything at all, // or code cademy that has tutorials for a variety of languages. Each of these resources has free options available, and you can learn more at hylandtechoutreach dot github dot io slash hackathon! ///

Another piece of advice - don't sweat the small stuff. // Maybe you underestimated the time you had, or you used a difficult new languages, or ran into a bunch of technical troubles... // all of that is totally fine and normal! don't worry about it! // At the end of the day, a hackathon is SO MUCH MORE than a competition. // If you made some friends, practiced some skills, learned something new, and had fun, you succeeded! // As long as you enjoyed your time and became a better developer, you won. That's all there is to it. ///

Now let's go over some important takeaways. We'll start with the don'ts. // Don't burn yourself out ONLY working on your project. // Don't spend your entire night debugging one line. //  Don't work on only the boring parts of your project, like a log in system. If you love authentication that's fine; just try to focus on what's fun for you! // And lastly, try not to take it too seriously. Now onto the Dooze. // Practice self-care! Sleep and keep up on hygiene. // Take the time to plan your project, and make sure the scope makes sense BEFORE you start coding. // Don't be afraid to use existing libraries if necessary. That's how it works in the real world! // Focus on learning. // and above all else, HAVE FUN! ///

Now, if you still aren't inspired, here are some quick stories. This hackathon could be the beginning of something great. // GroupMe is an example of a product that started as a hackathon idea. It was a project that DIDN'T EVEN WIN at techcrunch disrupt, // but the folks who built it liked it, so they turned it into a fully-fledged product and company. They then went on to sell it to Skype for EIGHTY-FIVE MILLION DOLLARS! That could be you. You could have eighty-five million dollars because of this hackathon. // Another example is GiveCamp that took place in Cleveland Ohio. // The idea with this hackathon was to hack for charity. // 20 projects were created, all designed to help non-profit organizations. // These products are still helping those groups to this day, and having a real impact on the world! Remember, the theme for the hackathon is Coding For Good, so whatever you make could go on to make great things happen. ///

And, if that's not enough, you could go on to work at Hyland someday, like some of our former hackathon attendees. The sky's the limit! ///

Lastly, I will leave you with this quote from Kung Fu Panda 3. If you only do what you can do, you will never be more than you are now. ///

Thanks for watching everybody. Please don't hesitate to reach out if you have any questions. You can email us at techoutreach@hyland.com. Happy Hacking!

